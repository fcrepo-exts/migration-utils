<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Main Migrator -->

    <bean id="migrator" class="org.fcrepo.migration.Migrator">
        <property name="source" ref="exportedFoxmlDirectoryObjectSource" />

        <property name="handler" ref="consoleLoggingStreamingFedoraObjectHandler" />
        <!-- Replacing the above handler with this one will enable the basic
             migration scenario.  (note, unless you reconfigute it, it will write
             content to localhost:8080/rest)
        <property name="handler" ref="objectAbstraction" />
        -->
        <!-- The following is a convenience option for testing that allows you to
             point to a very large directory, but only ingest as many records as
             indicated by the 'limit' value.
         -->
        <property name="limit" value="2" />
    </bean>



    <!--  OBJECT SOURCES : choose one for your migrator  -->

    <bean id="nativeFoxmlDirectoryObjectSource" class="org.fcrepo.migration.foxml11.NativeFoxmlDirectoryObjectSource" >
        <constructor-arg name="objectStore" ref="objectStore" />
        <constructor-arg name="resolver" ref="akubraIDResolver" />
        <constructor-arg name="localFedoraServer" ref="localFedoraServer" />
        <property name="fetcher" ref="httpClientURLFetcher"/>
    </bean>

    <bean id="exportedFoxmlDirectoryObjectSource" class="org.fcrepo.migration.foxml11.ArchiveExportedFoxmlDirectoryObjectSource">
        <constructor-arg name="exportDir" ref="exportedFoxmlDir"/>
        <constructor-arg name="localFedoraServer" ref="localFedoraServer" />
    </bean>

    <!-- ... need objects from another source?  Consider writing your own and adding it here, or asking a
         project maintainer to do it for you! -->



    <!-- Streaming OBJECT HANDLERS : choose one for your migrator -->

    <!--  This one simply outputs data about each object from the Object Source.  It is
          useful for testing or debugging.  -->
    <bean id="consoleLoggingStreamingFedoraObjectHandler" class="org.fcrepo.migration.handlers.ConsoleLoggingStreamingFedoraObjectHandler" />

    <!-- This one provdes a whole-object abstraction to the handler as its single parameter. -->
    <bean id="objectAbstraction" class="org.fcrepo.migration.handlers.ObjectAbstractionStreamingFedoraObjectHandler">
        <constructor-arg ref="versionAbstraction"/>
    </bean>



    <!-- Whole-Object OBJECT HANDLERS: chain one of these to objectAbstraction above. -->

    <bean id="versionAbstraction" class="org.fcrepo.migration.handlers.VersionAbstractionFedoraObjectHandler">
        <constructor-arg ref="basicMigration"/>
    </bean>

    <!-- ...have your own object-level custom handler??? Add it here and use it above! -->



    <!-- Version-level OBJECT HANDLERS: chain one of these to the versionAbstraction above. -->

    <!-- This bean does a basic migration from fedora 3 to fedora 4.  Currently it:
        Converts DC, RELS-EXT and object properties into Fedora 4 RDF properterties.
        Converts all other M or X datastreams into nonRdfResources under the object in Fedora 4
        Creates nonRdfresources under the object for X and R datastreams that redirect to the external resource.
      -->
    <bean id="basicMigration" class="org.fcrepo.migration.handlers.BasicObjectVersionHandler">
        <constructor-arg name="repo" ref="fedora4Client" />
        <constructor-arg name="idMapper" ref="idMapper" />
        <constructor-arg name="localFedoraServer" ref="localFedoraServer" />

        <!-- set these to true if you want to copy the external content into your fedora 4
             repository at the time of migration -->
        <property name="importExternal" value="false" />
        <property name="importRedirect" value="false" />

    </bean>



    <!-- ID MAPPERS: defines the IDs that are generated for the new Fedora 4 objects. -->

    <bean id="idMapper" class="org.fcrepo.migration.idmappers.SimpleIDMapper">
        <constructor-arg name="baseUrl" ref="fedora4Url" />
        <constructor-arg name="rootPath" value="migrated-fedora3" />
        <property name="charDepth" value="2" />
    </bean>




    <!-- Pluggable utility beans -->

    <!-- The configuration options for a Fedora 4 client to do the updates to Fedora 4 -->
    <bean id="fedora4Client" class="org.fcrepo.client.impl.FedoraRepositoryImpl">
        <constructor-arg name="repositoryURL" ref="fedora4Url" />
    </bean>

    <!-- A utility bean that maintains an index necessary to resolve datastream files from the fedora 3 internal ids
         as encoded for fedora installations using the akubra-fs storage.
     -->
    <bean id="akubraIDResolver" class="org.fcrepo.migration.foxml11.AkubraFSIDResolver">
        <constructor-arg name="dsRoot" type="java.io.File" ref="datastreamStore"/>

        <!-- Add the following line back in if you wish to maintain a cache of the internal id mapping between
             runs of this application.  This will save substantial time at startup, but is not appropriate if
             the repository changes.  -->
        <!--<constructor-arg name="indexDir" type="java.io.File" ref="indexRoot" />-->
    </bean>

    <!-- A utility bean that maintains an index necessary to resolve datastream files from the fedora 3 internal ids
     as encoded for fedora installations using the akubra-fs storage.
     -->
    <bean id="legacyIDResolver" class="org.fcrepo.migration.foxml11.LegacyFSIDResolver">
        <constructor-arg name="dsRoot" type="java.io.File" ref="datastreamStore"/>

        <!-- Add the following line back in if you wish to maintain a cache of the internal id mapping between
             runs of this application.  This will save substantial time at startup, but is not appropriate if
             the repository changes.  -->
        <!--<constructor-arg name="indexDir" type="java.io.File" ref="indexRoot" />-->
    </bean>


    <!-- A bean that defines the codebase used to make HTTP requests to fetch content at URLs. -->
    <bean id="httpClientURLFetcher" class="org.fcrepo.migration.foxml11.HttpClientURLFetcher" />



    <!-- Local Environment Configuration -->

    <bean id="fedora4Url" class="java.lang.String">
        <constructor-arg value="http://localhost:8080/rest/" />
    </bean>

    <bean id="objectStore" class="java.io.File">
        <constructor-arg type="java.lang.String" value="src/test/resources/akubraFS/objectStore" />
    </bean>

    <bean id="datastreamStore" class="java.io.File">
        <constructor-arg type="java.lang.String" value="src/test/resources/akubraFS/datastreamStore" />
    </bean>

    <bean id="exportedFoxmlDir" class="java.io.File">
        <constructor-arg type="java.lang.String" value="src/test/resources/exported" />
    </bean>

    <bean id="indexRoot" class="java.io.File">
        <constructor-arg type="java.lang.String" value="index" />
    </bean>

    <!--
      The host and port for the fedora 3 server from which you're migrating content.  This server
      does not have to be running for all migration configurations, only if you have redirect or
      external datastreams that resolve to other spots in the repository, AND you wish to copy
      the content (rather than migrate the redirect).  Unless both of those conditions apply,
      it doesn't matter what value you have in this variable.
      -->
    <bean id="localFedoraServer" class="java.lang.String">
        <constructor-arg value="localhost:8080" />
    </bean>

</beans>
